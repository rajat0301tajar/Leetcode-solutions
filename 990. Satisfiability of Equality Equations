Given an array equations of strings that represent relationships between variables, each string equations[i] has length 4 and takes one of two different forms: "a==b" or "a!=b".  Here, a and b are lowercase letters (not necessarily different) that represent one-letter variable names.

Return true if and only if it is possible to assign integers to variable names so as to satisfy all the given equations.

 

Example 1:

Input: ["a==b","b!=a"]
Output: false
Explanation: If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int uf[26];
    int find(int x){
        if(x!=uf[x]){  //root has parent = root.
            uf[x]= find(uf[x]);  //compression ...
        }
        return uf[x];
    }
    bool equationsPossible(vector<string>& equations) {
        for(int i=0;i<26;i++){
            uf[i]=i;
        }
        for(string e : equations){  // for constructing union find components
            if(e[1]=='='){
              uf[find(e[0]-'a')]=uf[find(e[3]-'a')];//everthing checked at root level
            }
        }
        for(string e : equations){  // for checking contradiction...
                if(e[1] == '!' && find(e[0]-'a') == find(e[3]-'a'))
                    return false;
        }
        return true;
    }
};
