#include<bits/stdc++.h>
using namespace std;
typedef long long int64;
const int maxn = 6e5 + 7;
bool prime[maxn];
int sum[maxn];
void sieve(){
    fill(prime, prime + maxn, 1);
    int n = maxn - 1;
    prime[0] = false; prime[1] = false;
    for(int i = 2; i <= n; i++){
        if(prime[i]){
            for(int p = i * 2; p <= n; p += i){
                prime[p] = false;
            }
        }
    }
    sum[0] = 0; sum[1] = 0;
    for(int i = 2; i <= n; i++){
        sum[i] = sum[i - 1] + (prime[i] == true);
    }
}
bool checkSpecial(int i, int r1, int r2){
    int A = sum[i];
    if(A * r2 >= i * r1){
        return true;
    }
    return false;
}
int main(){
    sieve();
    for(int i = 1; i <= 100; i++){
        if(prime[i]){
            cout << i << endl;
        }
    }
    cout << "****" << endl;
    for(int i = 100; i <= 1000; i += 100){
        cout << sum[i] << endl;
    }
    int T; cin >> T;

    while(T--){
        int r1, r2; cin >> r1 >> r2;
        int n; cin >> n;
        string s; cin >> s;// either # or *...
        int dp[n];
        fill(dp, dp + n, 1 << 30);
        dp[0] = 0;
        
        cout << "special index are : ";
        for(int j = 0; j < n - 1; j++){
            if(checkSpecial(j,r1,r2)) cout << j << " ";
        }
        cout << endl;
        for(int j = 0; j < n - 1; j++){
            if(checkSpecial(j + 1, r1, r2) && s[j] != '*'){
                for(int x : {1, 2, sum[j + 1]}){
                    if(j + x < n){
                        dp[j + x] = min(dp[j + x], 1 + dp[j]);
                    }
                }
            }
            else if(s[j] != '*'){
                for(int x : {1, 2}){
                    if(j + x < n){
                        dp[j + x] = min(dp[j + x], 1 + dp[j]);
                    }
                }
            }
        }
        cout << endl;
        for(int i = 0; i < n; i++){
            cout << dp[i] << " ";
        }
        cout << endl;
        cout << ((dp[n - 1] == (1 << 30)) ? -1 : dp[n - 1]) << endl;
    }
    return 0;
}
