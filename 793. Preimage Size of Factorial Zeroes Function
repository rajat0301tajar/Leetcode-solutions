Let f(x) be the number of zeroes at the end of x!. (Recall that x! = 1 * 2 * 3 * ... * x, and by convention, 0! = 1.)

For example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! = 39916800 has 2 zeroes at the end. Given K, find how many non-negative integers x have the property that f(x) = K.

Example 1:
Input: K = 0
Output: 5
Explanation: 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes.

Example 2:
Input: K = 5
Output: 0
Explanation: There is no x such that x! ends in K = 5 zeroes.

Note:

    K will be an integer in the range [0, 10^9].
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    typedef unsigned long long ll;
    ll countTrailing0(ll n){
        ll c = 0;
        ll num = n;
        while(n > 0){
            c += n / 5;
            n /= 5;
        }
        // cout<<num<<" "<<c<<endl;
        return c;
    }
    // no no no yes... want the first yes.
    ll helper(int k){ 
        ll l = 0; ll r = (ll)5*(k + 1) - 1;
        while(l < r){
            ll mid = (l + r) / 2;
            if(countTrailing0(mid) >= k){
                r = mid;
            }
            else{
                l = mid + 1;
            }
        }
        return r;
    }
    
    int preimageSizeFZF(int K) { 
//         x  = gives smallest number having k trailing zeros if it exists otherwise > k zeros.
        ll x = helper(K); //cout<<x<<endl;cout<<"---------"<<endl;
        ll y = helper(K + 1); //cout<<y<<endl;
        return y - x;
    }
};
