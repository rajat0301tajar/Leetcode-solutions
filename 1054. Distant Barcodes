In a warehouse, there is a row of barcodes, where the i-th barcode is barcodes[i].

Rearrange the barcodes so that no two adjacent barcodes are equal.  You may return any answer, and it is guaranteed an answer exists.

 

Example 1:

Input: [1,1,1,2,2,2]
Output: [2,1,2,1,2,1]

Example 2:

Input: [1,1,1,1,2,2,3,3]
Output: [1,3,1,3,2,1,2,1]

 

Note:

    1 <= barcodes.length <= 10000
    1 <= barcodes[i] <= 10000
-----------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> rearrangeBarcodes(vector<int>& b) {
        priority_queue<pair<int,int>>pq;
        int n=b.size();
        int freq[10001];
        memset(freq,0,sizeof(freq));
        for(int i=0;i<n;i++){
            freq[b[i]]++;
        }
        for(int i=1;i<10001;i++){
            if(freq[i])
            pq.push({freq[i],i});
        }
        vector<int>v(n,0);
        int pos=0;
        while(!pq.empty()){
            int f=pq.top().first;
            int ele=pq.top().second;
            pq.pop();
            for(int cnt=0;cnt<f;cnt++,pos+=2){
                if(pos>=n){
                    pos=1;
                }
                v[pos]=ele;
            }           
        }
        return v;
    }
};
