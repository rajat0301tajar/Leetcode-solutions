#include<bits/stdc++.h>
using namespace std;
typedef long long int64;
string A[100000];
int st[1000000];
vector<int>ret;
string vwl = "aeiou";
bool check(string s){
    if(vwl.find(s[0]) != string :: npos &&
       vwl.find(s[s.size() - 1]) != string :: npos){
        return true;
    }
    return false;
}
int query(int tidx, int l, int r, int ql, int qr){
    if(l > qr || r < ql) return 0;
    if(l >= ql && r <= qr){
        return st[tidx];
    }
    int mid = (l + r) / 2;
    return query(2 * tidx + 1, l, mid, ql, qr) +
           query(2 * tidx + 2, mid + 1, r, ql, qr);
}
void build(int tidx, int lo, int hi){
    if(lo == hi){
        st[tidx] = check(A[lo]);
        return ;
    }
    int mid = (lo + hi) / 2;
    build(2 * tidx + 1, lo, mid);
    build(2 * tidx + 2, mid + 1, hi);
    st[tidx] = st[2 * tidx + 1] + st[2 * tidx + 2];
}
int main(){
    int n; cin >> n;
    for(int i = 0; i < n; i++){
        cin >> A[i];
    }
    build(0, 0, n - 1);
    int q; cin >> q;
    while(q--){
        int l, r; cin >> l >> r;
        l--; r--;
        int x = query(0, 0, n - 1, l, r);
        ret.push_back(x);
    }
    for(int i = 0; i < ret.size(); i++){
        cout << ret[i] <<" ";
    }
    return 0;
}
