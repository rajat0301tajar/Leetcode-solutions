Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.

 

Example 1:

Input: [[1,2],[2,3],[3,4],[1,3]]
Output: 1
Explanation: [1,3] can be removed and the rest of intervals are non-overlapping.
-----------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    static bool comp(vector<int>&a, vector<int>&b){
        return a[1] < b[1];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        int n = intervals.size();
        if(n == 0)
            return 0;
        sort(intervals.begin(),intervals.end(),comp);
        int ref = intervals[0][1];
        int ret = 0;
        for(int i = 1; i < n; i++){
            if(intervals[i][0] >= ref){ // no overlap
                ref = intervals[i][1];
                continue;
            }
            else if(intervals[i][0] < ref){ // overlap
                ret++;
                continue;
            }
        }
        return ret;
    }
};
