

Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order, return a sorted array of only the integers that appeared in all three arrays.

 

Example 1:

Input: arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
Output: [1,5]
Explanation: Only 1 and 5 appeared in the three arrays.

 

Constraints:

    1 <= arr1.length, arr2.length, arr3.length <= 1000
    1 <= arr1[i], arr2[i], arr3[i] <= 2000
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> arraysIntersection(vector<int>& A, vector<int>& B, vector<int>& C) {
        int i = 0, j = 0, k = 0;
        int n = A.size(); int m = B.size(); int l = C.size();
        vector<int>ret;
        while(i < n && j < m && k < l){
            if(A[i] == B[j] && B[j] == C[k]){
                ret.push_back(A[i]);
                i++; j++; k++;
            }
            else if(A[i] <= B[j] && A[i] <= C[k]) i++;
            else if(B[j] <= A[i] && B[j] <= C[k]) j++;
            else if(C[k] <= A[i] && C[k] <= B[j]) k++;
        }
        return ret;
    }
};
