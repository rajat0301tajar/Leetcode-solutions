Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example 1:

Input: n = 12
Output: 3 
Explanation: 12 = 4 + 4 + 4.

Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
--------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int numSquares(int n) {
        queue<pair<int,int>>q;
        for(int i = 1; i * i <= n; i++){
            int x = i * i;
            q.push({x, 1});
            if(x == n) return 1;
        }
        while(!q.empty()){
            int sz = q.size();
            while(sz --){
                auto temp = q.front();
                q.pop();
                int val = temp.first;
                int d = temp.second;
                if(val == n) return d;
                for(int i = 1; i * i <= n; i++){
                    int x = i * i;
                    if(val + x == n) return d + 1;
                    if(val + x < n){
                        q.push({val + x, d + 1});
                    }
                }
            }
        }
        return 0;
    }
};
