Given a positive integer n, find the number of non-negative integers less than or equal to n, whose binary representations do NOT contain consecutive ones.

Example 1:

Input: 5
Output: 5
Explanation: 
Here are the non-negative integers <= 5 with their corresponding binary representations:
0 : 0
1 : 1
2 : 10
3 : 11
4 : 100
5 : 101
Among them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. 
-------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int findIntegers(int num) {
        vector<int>f(32); // f[i] signifies number of num with i bits without consecutive 1's .
        f[0] = 1;
        f[1] = 2;
        for(int i = 2; i < f.size(); i++){
            f[i] = f[i - 1] + f[i - 2]; // append 0 at the end or 01 at the end.
        }
        int i = 31 , ret = 0 , prev_bit = 0;
        while(i >= 0){
            if((num & (1 << i)) != 0){
                ret += f[i];
                if(prev_bit == 1){
                    ret--;
                    break;
                }
                prev_bit = 1;
            }
            else{
                prev_bit = 0;
            }
            i--;
        }
        return ret + 1;
    }
};
