

You have some coins.  The i-th coin has a probability prob[i] of facing heads when tossed.

Return the probability that the number of coins facing heads equals target if you toss every coin exactly once.

 

Example 1:

Input: prob = [0.4], target = 1
Output: 0.40000

Example 2:

Input: prob = [0.5,0.5,0.5,0.5,0.5], target = 0
Output: 0.03125

 

Constraints:

    1 <= prob.length <= 1000
    0 <= prob[i] <= 1
    0 <= target <= prob.length
    Answers will be accepted as correct if they are within 10^-5 of the correct answer.
------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    double probabilityOfHeads(vector<double>& p, int target) {
        int n = p.size();
        double dp[n + 1][n + 1];
        // dp[j][i] = probability of getting j heads in i tosses;
        memset(dp, 0, sizeof(dp));
        dp[0][0] = 1;
        for(int i = 1; i <= n; i++){
            for(int j = 0; j <= i; j++){
                dp[j][i] += ((j >= 1) ? dp[j - 1][i - 1] * p[i - 1] : 0) + dp[j][i - 1] * (1 - p[i - 1]);
            }
        }
        /*for(int i = 0; i <= n; i++){
            for(int j = 0; j <= n; j++){
                cout << dp[i][j] << " ";
            }
            cout << endl;
        }*/
        return dp[target][n];
    }
};
