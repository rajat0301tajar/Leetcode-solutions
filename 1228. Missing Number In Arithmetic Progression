

In some array arr, the values were in arithmetic progression: the values arr[i+1] - arr[i] are all equal for every 0 <= i < arr.length - 1.

Then, a value from arr was removed that was not the first or last value in the array.

Return the removed value.

 

Example 1:

Input: arr = [5,7,11,13]
Output: 9
Explanation: The previous array was [5,7,9,11,13].

Example 2:

Input: arr = [15,13,12]
Output: 14
Explanation: The previous array was [15,14,13,12].

 

Constraints:

    3 <= arr.length <= 1000
    0 <= arr[i] <= 10^5
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int missingNumber(vector<int>& A) {
        int n = A.size();
        int diff = (A.back() - A[0]) / n;
        if(diff == 0) return A[0];
        for(int i = 0; i < n - 1; i++){
            if(A[i + 1] != A[i] + diff){
                return A[i] + diff;
            }
        }
        return -1;
    }
};
